{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, HOME, END } from '@angular/cdk/keycodes';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n  @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\nconst _c0 = [\"body\"];\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\n\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\n\nconst _c3 = function (a0, a1) {\n  return {\n    collapsedHeight: a0,\n    expandedHeight: a1\n  };\n};\n\nconst _c4 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\n\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Time and timing curve for expansion panel animations.\n  @type {?} */\n\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/** *\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n  @type {?} */\n\nconst matExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [state('collapsed, void', style({\n    height: '{{collapsedHeight}}'\n  }), {\n    params: {\n      collapsedHeight: '48px'\n    }\n  }), state('expanded', style({\n    height: '{{expandedHeight}}'\n  }), {\n    params: {\n      expandedHeight: '64px'\n    }\n  }), transition('expanded <=> collapsed, void => collapsed', group([query('@indicatorRotate', animateChild(), {\n    optional: true\n  }), animate(EXPANSION_PANEL_ANIMATION_TIMING)]))]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n\nclass MatExpansionPanelContent {\n  /**\n   * @param {?} _template\n   */\n  constructor(_template) {\n    this._template = _template;\n  }\n\n}\n\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatExpansionPanelContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst _CdkAccordionItem = CdkAccordionItem;\n/** *\n * Counter for generating unique element ids.\n  @type {?} */\n\nlet uniqueId = 0;\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n\nclass MatExpansionPanel extends CdkAccordionItem {\n  /**\n   * @param {?} accordion\n   * @param {?} _changeDetectorRef\n   * @param {?} _uniqueSelectionDispatcher\n   * @param {?} _viewContainerRef\n   * @param {?=} _document\n   * @param {?=} _animationMode\n   */\n  constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, // @breaking-change 8.0.0 _document and _animationMode to be made required\n  _document, _animationMode) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this._viewContainerRef = _viewContainerRef;\n    this._animationMode = _animationMode;\n    this._hideToggle = false;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     */\n\n    this.afterExpand = new EventEmitter();\n    /**\n     * An event emitted after the body's collapse animation happens.\n     */\n\n    this.afterCollapse = new EventEmitter();\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     */\n\n    this._inputChanges = new Subject();\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     */\n\n    this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n    this.accordion = accordion;\n    this._document = _document;\n  }\n  /**\n   * Whether the toggle indicator should be hidden.\n   * @return {?}\n   */\n\n\n  get hideToggle() {\n    return this._hideToggle || this.accordion && this.accordion.hideToggle;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set hideToggle(value) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n  /**\n   * Determines whether the expansion panel should have spacing between it and its siblings.\n   * @return {?}\n   */\n\n\n  _hasSpacing() {\n    if (this.accordion) {\n      // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n      // the [displayMode] input changes, the change detection will also cover the host bindings\n      // of this expansion panel.\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n\n    return false;\n  }\n  /**\n   * Gets the expanded state string.\n   * @return {?}\n   */\n\n\n  _getExpandedState() {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith(\n      /** @type {?} */\n      null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    this._inputChanges.next(changes);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._inputChanges.complete();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _bodyAnimation(event) {\n    const {\n      phaseName,\n      toState,\n      fromState\n    } = event;\n\n    if (phaseName === 'done' && toState === 'expanded' && fromState !== 'void') {\n      this.afterExpand.emit();\n    }\n\n    if (phaseName === 'done' && toState === 'collapsed' && fromState !== 'void') {\n      this.afterCollapse.emit();\n    }\n  }\n  /**\n   * Checks whether the expansion panel's content contains the currently-focused element.\n   * @return {?}\n   */\n\n\n  _containsFocus() {\n    if (this._body && this._document) {\n      /** @type {?} */\n      const focusedElement = this._document.activeElement;\n      /** @type {?} */\n\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n\n    return false;\n  }\n\n}\n\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 6,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\",\n    afterExpand: \"afterExpand\",\n    afterCollapse: \"afterCollapse\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MAT_ACCORDION,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimation($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  dependencies: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanel.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [MAT_ACCORDION]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatExpansionPanel.propDecorators = {\n  hideToggle: [{\n    type: Input\n  }],\n  afterExpand: [{\n    type: Output\n  }],\n  afterCollapse: [{\n    type: Output\n  }],\n  _lazyContent: [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }],\n  _body: [{\n    type: ViewChild,\n    args: ['body']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimation($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [MAT_ACCORDION]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\n\nclass MatExpansionPanelActionRow {}\n\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\n\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\n\n\nclass MatExpansionPanelHeader {\n  /**\n   * @param {?} panel\n   * @param {?} _element\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   */\n  constructor(panel, _element, _focusMonitor, _changeDetectorRef) {\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parentChangeSubscription = Subscription.EMPTY;\n    /** @type {?} */\n\n    const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!changes[\"hideToggle\"])) : EMPTY; // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes[\"hideToggle\"] || changes[\"disabled\"])))).subscribe(() => this._changeDetectorRef.markForCheck()); // Avoids focus being lost if the panel contained the focused element and was closed.\n\n    panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n\n    _focusMonitor.monitor(_element).subscribe(origin => {\n      if (origin && panel.accordion) {\n        panel.accordion._handleHeaderFocus(this);\n      }\n    });\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  get disabled() {\n    return this.panel.disabled;\n  }\n  /**\n   * Toggles the expanded state of the panel.\n   * @return {?}\n   */\n\n\n  _toggle() {\n    this.panel.toggle();\n  }\n  /**\n   * Gets whether the panel is expanded.\n   * @return {?}\n   */\n\n\n  _isExpanded() {\n    return this.panel.expanded;\n  }\n  /**\n   * Gets the expanded state string of the panel.\n   * @return {?}\n   */\n\n\n  _getExpandedState() {\n    return this.panel._getExpandedState();\n  }\n  /**\n   * Gets the panel id.\n   * @return {?}\n   */\n\n\n  _getPanelId() {\n    return this.panel.id;\n  }\n  /**\n   * Gets whether the expand indicator should be shown.\n   * @return {?}\n   */\n\n\n  _showToggle() {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n  /**\n   * Handle keydown event calling to toggle() if appropriate.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _keydown(event) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n\n        this._toggle();\n\n        break;\n\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @param {?=} origin Origin of the action that triggered the focus.\n   * @return {?}\n   */\n\n\n  focus(origin = 'program') {\n    this._focusMonitor.focusVia(this._element, origin);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n\n}\n\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"],\n  hostVars: 14,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    }\n  },\n  inputs: {\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  ngContentSelectors: _c6,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  dependencies: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanelHeader.ctorParameters = () => [{\n  type: MatExpansionPanel,\n  decorators: [{\n    type: Host\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}];\n\nMatExpansionPanelHeader.propDecorators = {\n  expandedHeight: [{\n    type: Input\n  }],\n  collapsedHeight: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight],\n      host: {\n        'class': 'mat-expansion-panel-header',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)',\n        '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n      },\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nclass MatExpansionPanelDescription {}\n\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\n\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nclass MatExpansionPanelTitle {}\n\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\n\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Directive for a Material Design Accordion.\n */\n\n\nclass MatAccordion extends CdkAccordion {\n  constructor() {\n    super(...arguments);\n    this._hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n\n    this.displayMode = 'default';\n  }\n  /**\n   * Whether the expansion indicator should be hidden.\n   * @return {?}\n   */\n\n\n  get hideToggle() {\n    return this._hideToggle;\n  }\n  /**\n   * @param {?} show\n   * @return {?}\n   */\n\n\n  set hideToggle(show) {\n    this._hideToggle = coerceBooleanProperty(show);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\n  }\n  /**\n   * Handles keyboard events coming in from the panel headers.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleHeaderKeydown(event) {\n    const {\n      keyCode\n    } = event;\n    /** @type {?} */\n\n    const manager = this._keyManager;\n\n    if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * @param {?} header\n   * @return {?}\n   */\n\n\n  _handleHeaderFocus(header) {\n    this._keyManager.updateActiveItem(header);\n  }\n\n}\n\nMatAccordion.ɵfac = /*@__PURE__*/function () {\n  let ɵMatAccordion_BaseFactory;\n  return function MatAccordion_Factory(t) {\n    return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n  };\n}();\n\nMatAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-accordion\"],\n  inputs: {\n    multi: \"multi\",\n    displayMode: \"displayMode\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatAccordion.propDecorators = {\n  _headers: [{\n    type: ContentChildren,\n    args: [MatExpansionPanelHeader, {\n      descendants: true\n    }]\n  }],\n  hideToggle: [{\n    type: Input\n  }],\n  displayMode: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      inputs: ['multi'],\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nclass MatExpansionModule {}\n\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\n\nMatExpansionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, CdkAccordionModule, PortalModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function () {\n      return [CommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, _CdkAccordionItem, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };","map":{"version":3,"names":["InjectionToken","Directive","TemplateRef","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","EventEmitter","ElementRef","Input","Inject","Optional","Output","SkipSelf","ViewContainerRef","ViewEncapsulation","ViewChild","Host","ContentChildren","NgModule","animate","animateChild","group","state","style","transition","trigger","query","CdkAccordionItem","CdkAccordion","CdkAccordionModule","coerceBooleanProperty","UniqueSelectionDispatcher","TemplatePortal","PortalModule","DOCUMENT","CommonModule","ANIMATION_MODULE_TYPE","Subject","merge","Subscription","EMPTY","filter","startWith","take","FocusMonitor","FocusKeyManager","ENTER","SPACE","HOME","END","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","value","params","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c5","_c6","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","constructor","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","_CdkAccordionItem","uniqueId","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","hideToggle","_hasSpacing","expanded","displayMode","ngAfterContentInit","_lazyContent","opened","pipe","_portal","subscribe","ngOnChanges","changes","next","ngOnDestroy","complete","_bodyAnimation","event","phaseName","toState","fromState","emit","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","inputs","disabled","outputs","closed","expandedChange","exportAs","features","ɵɵProvidersFeature","provide","useValue","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","dependencies","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","markForCheck","focusVia","monitor","origin","_handleHeaderFocus","_toggle","toggle","_isExpanded","_getPanelId","_showToggle","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵsyntheticHostProperty","ɵɵpureFunction2","MatExpansionPanelHeader_Template","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","show","_keyManager","_headers","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","header","updateActiveItem","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/expansion.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, HOME, END } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Time and timing curve for expansion panel animations.\n  @type {?} */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/** *\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n  @type {?} */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel header height. */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CdkAccordionItem = CdkAccordionItem;\n/** *\n * Counter for generating unique element ids.\n  @type {?} */\nlet uniqueId = 0;\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     * @param {?=} _animationMode\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, \n    // @breaking-change 8.0.0 _document and _animationMode to be made required\n    _document, _animationMode) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        this.accordion = accordion;\n        this._document = _document;\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n            // the [displayMode] input changes, the change detection will also cover the host bindings\n            // of this expansion panel.\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(/** @type {?} */ ((null))), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _bodyAnimation(event) {\n        const { phaseName, toState, fromState } = event;\n        if (phaseName === 'done' && toState === 'expanded' && fromState !== 'void') {\n            this.afterExpand.emit();\n        }\n        if (phaseName === 'done' && toState === 'collapsed' && fromState !== 'void') {\n            this.afterCollapse.emit();\n        }\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body && this._document) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimation($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, dependencies: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimation($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ], host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                }, styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media screen and (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!changes[\"hideToggle\"])) : EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes[\"hideToggle\"] || changes[\"disabled\"]))))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        _focusMonitor.monitor(_element).subscribe(origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this._toggle();\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        this._focusMonitor.focusVia(this._element, origin);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 14, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, dependencies: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel-header', template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ], host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                }, styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"] }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this._headers).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], inputs: { multi: \"multi\", displayMode: \"displayMode\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, CdkAccordionModule, PortalModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, _CdkAccordionItem, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}