{"ast":null,"code":"import _asyncToGenerator from \"/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n    this.isLoggedIn$ = this.afAuth.authState.pipe(map(user => !!user));\n  }\n\n  signInWithEmail(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.afAuth.signInWithEmailAndPassword(email, password);\n    })();\n  }\n\n  signUpWithEmail(email, password) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.afAuth.createUserWithEmailAndPassword(email, password);\n    })();\n  }\n\n  signOut() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this3.afAuth.signOut();\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,GAAT,QAAoB,gBAApB;;;AAKA,OAAM,MAAOC,WAAP,CAAkB;EAGtBC,YAAoBC,MAApB,EAA2C;IAAvB;IAA2B,KAAKC,WAAL,GAAmB,KAAKD,MAAL,CAAYE,SAAZ,CAAsBC,IAAtB,CAChEN,GAAG,CAACO,IAAI,IAAI,CAAC,CAACA,IAAX,CAD6D,CAAnB;EAE3C;;EAEEC,eAAe,CAACC,KAAD,EAAgBC,QAAhB,EAAgC;IAAA;;IAAA;MACnD,aAAa,KAAI,CAACP,MAAL,CAAYQ,0BAAZ,CAAuCF,KAAvC,EAA8CC,QAA9C,CAAb;IADmD;EAEpD;;EAEKE,eAAe,CAACH,KAAD,EAAgBC,QAAhB,EAAgC;IAAA;;IAAA;MACnD,aAAa,MAAI,CAACP,MAAL,CAAYU,8BAAZ,CAA2CJ,KAA3C,EAAkDC,QAAlD,CAAb;IADmD;EAEpD;;EAEKI,OAAO;IAAA;;IAAA;MACX,aAAa,MAAI,CAACX,MAAL,CAAYW,OAAZ,EAAb;IADW;EAEZ;;AAjBqB;;;mBAAXb,aAAWc;AAAA;;;SAAXd;EAAWe,SAAXf,WAAW;EAAAgB,YAFV","names":["map","AuthService","constructor","afAuth","isLoggedIn$","authState","pipe","user","signInWithEmail","email","password","signInWithEmailAndPassword","signUpWithEmail","createUserWithEmailAndPassword","signOut","i0","factory","providedIn"],"sourceRoot":"","sources":["/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn$: Observable<boolean>;\n\n  constructor(private afAuth: AngularFireAuth) { this.isLoggedIn$ = this.afAuth.authState.pipe(\n    map(user => !!user)\n  ); }\n\n  async signInWithEmail(email: string, password: string) {\n    return await this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  async signUpWithEmail(email: string, password: string) {\n    return await this.afAuth.createUserWithEmailAndPassword(email, password);\n  }\n\n  async signOut() {\n    return await this.afAuth.signOut();\n  }\n\n  // Other authentication logic and methods\n}\n"]},"metadata":{},"sourceType":"module"}