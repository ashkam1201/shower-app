{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Injectable, NgZone, defineInjectable, inject } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { asapScheduler, combineLatest, fromEventPattern, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nclass LayoutModule {}\n\nLayoutModule.ɵfac = function LayoutModule_Factory(t) {\n  return new (t || LayoutModule)();\n};\n\nLayoutModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: LayoutModule\n});\nLayoutModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Global registry for all dynamically-created, injected media queries.\n  @type {?} */\n\n\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** *\n * Style tag that holds all of the dynamically-created media queries.\n  @type {?} */\n\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\n\nclass MediaMatcher {\n  /**\n   * @param {?} platform\n   */\n  constructor(platform) {\n    this.platform = platform;\n    this._matchMedia = this.platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n    // call it from a different scope.\n    window.matchMedia.bind(window) : noopMatchMedia;\n  }\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  matchMedia(query) {\n    if (this.platform.WEBKIT) {\n      createEmptyStyleRule(query);\n    }\n\n    return this._matchMedia(query);\n  }\n\n}\n\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) {\n  return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nMediaMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MediaMatcher,\n  factory: MediaMatcher.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nMediaMatcher.ctorParameters = () => [{\n  type: Platform\n}];\n/** @nocollapse */\n\n\nMediaMatcher.ngInjectableDef = defineInjectable({\n  factory: function MediaMatcher_Factory() {\n    return new MediaMatcher(inject(Platform));\n  },\n  token: MediaMatcher,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\n\n\nfunction createEmptyStyleRule(query) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      /** @type {?} */\n\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      /** @type {?} */\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\n\n\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return (\n    /** @type {?} */\n    {\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {},\n      removeListener: () => {}\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Utility for checking the matching state of \\@media queries.\n */\n\n\nclass BreakpointObserver {\n  /**\n   * @param {?} mediaMatcher\n   * @param {?} zone\n   */\n  constructor(mediaMatcher, zone) {\n    this.mediaMatcher = mediaMatcher;\n    this.zone = zone;\n    /**\n     * A map of all media queries currently being listened for.\n     */\n\n    this._queries = new Map();\n    /**\n     * A subject for all other observables to takeUntil based on.\n     */\n\n    this._destroySubject = new Subject();\n  }\n  /**\n   * Completes the active subject, signalling to all other observables to complete.\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._destroySubject.next();\n\n    this._destroySubject.complete();\n  }\n  /**\n   * Whether one or more media queries match the current viewport size.\n   * @param {?} value One or more media queries to check.\n   * @return {?} Whether any of the media queries match.\n   */\n\n\n  isMatched(value) {\n    /** @type {?} */\n    const queries = splitQueries(coerceArray(value));\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n  /**\n   * Gets an observable of results for the given queries that will emit new results for any changes\n   * in matching of the given queries.\n   * @param {?} value One or more media queries to check.\n   * @return {?} A stream of matches for the given queries.\n   */\n\n\n  observe(value) {\n    /** @type {?} */\n    const queries = splitQueries(coerceArray(value));\n    /** @type {?} */\n\n    const observables = queries.map(query => this._registerQuery(query).observable);\n    return combineLatest(observables).pipe(debounceTime(0, asapScheduler), map(breakpointStates => {\n      /** @type {?} */\n      const response = {\n        matches: false,\n        breakpoints: {}\n      };\n      breakpointStates.forEach(state => {\n        response.matches = response.matches || state.matches;\n        response.breakpoints[state.query] = state.matches;\n      });\n      return response;\n    }));\n  }\n  /**\n   * Registers a specific query to be listened for.\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  _registerQuery(query) {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return (\n        /** @type {?} */\n        this._queries.get(query)\n      );\n    }\n    /** @type {?} */\n\n\n    const mql = this.mediaMatcher.matchMedia(query);\n    /** @type {?} */\n\n    let queryListener;\n    /** @type {?} */\n\n    const queryObservable = fromEventPattern( // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n    // back into the zone because matchMedia is only included in Zone.js by loading the\n    // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n    // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n    // patches it.\n    listener => {\n      queryListener = e => this.zone.run(() => listener(e));\n\n      mql.addListener(queryListener);\n    }, () => mql.removeListener(queryListener)).pipe(takeUntil(this._destroySubject), startWith(mql), map(nextMql => ({\n      query,\n      matches: nextMql.matches\n    })));\n    /** @type {?} */\n\n    const output = {\n      observable: queryObservable,\n      mql\n    };\n\n    this._queries.set(query, output);\n\n    return output;\n  }\n\n}\n\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {\n  return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nBreakpointObserver.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: BreakpointObserver,\n  factory: BreakpointObserver.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nBreakpointObserver.ctorParameters = () => [{\n  type: MediaMatcher\n}, {\n  type: NgZone\n}];\n/** @nocollapse */\n\n\nBreakpointObserver.ngInjectableDef = defineInjectable({\n  factory: function BreakpointObserver_Factory() {\n    return new BreakpointObserver(inject(MediaMatcher), inject(NgZone));\n  },\n  token: BreakpointObserver,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MediaMatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n  @type {?} */\n\n\nconst Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599px) and (orientation: portrait), ' + '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher };","map":{"version":3,"names":["NgModule","Injectable","NgZone","defineInjectable","inject","Platform","asapScheduler","combineLatest","fromEventPattern","Subject","debounceTime","map","startWith","takeUntil","coerceArray","ɵngcc0","ɵngcc1","LayoutModule","ɵfac","LayoutModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","constructor","platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","MediaMatcher_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ctorParameters","ngInjectableDef","args","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","mediaMatcher","zone","_queries","Map","_destroySubject","ngOnDestroy","next","complete","isMatched","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observe","observables","observable","pipe","breakpointStates","response","breakpoints","forEach","state","get","queryListener","queryObservable","listener","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"sources":["/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/layout.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Injectable, NgZone, defineInjectable, inject } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { asapScheduler, combineLatest, fromEventPattern, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Global registry for all dynamically-created, injected media queries.\n  @type {?} */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** *\n * Style tag that holds all of the dynamically-created media queries.\n  @type {?} */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} platform\n     */\n    constructor(platform) {\n        this.platform = platform;\n        this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this.platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MediaMatcher, factory: MediaMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ngInjectableDef = defineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(inject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css'); /** @type {?} */\n            ((document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            (/** @type {?} */ (mediaQueryStyleNode.sheet))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return /** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} mediaMatcher\n     * @param {?} zone\n     */\n    constructor(mediaMatcher, zone) {\n        this.mediaMatcher = mediaMatcher;\n        this.zone = zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        return combineLatest(observables).pipe(debounceTime(0, asapScheduler), map((breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            });\n            return response;\n        }));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return /** @type {?} */ ((this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this.mediaMatcher.matchMedia(query);\n        /** @type {?} */\n        let queryListener;\n        /** @type {?} */\n        const queryObservable = fromEventPattern(\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        (listener) => {\n            queryListener = (e) => this.zone.run(() => listener(e));\n            mql.addListener(queryListener);\n        }, () => mql.removeListener(queryListener))\n            .pipe(takeUntil(this._destroySubject), startWith(mql), map((nextMql) => ({ query, matches: nextMql.matches })));\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BreakpointObserver, factory: BreakpointObserver.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ngInjectableDef = defineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(inject(MediaMatcher), inject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((query) => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n  @type {?} */\nconst Breakpoints = {\n    XSmall: '(max-width: 599px)',\n    Small: '(min-width: 600px) and (max-width: 959px)',\n    Medium: '(min-width: 960px) and (max-width: 1279px)',\n    Large: '(min-width: 1280px) and (max-width: 1919px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599px) and (orientation: portrait), ' +\n        '(max-width: 959px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}