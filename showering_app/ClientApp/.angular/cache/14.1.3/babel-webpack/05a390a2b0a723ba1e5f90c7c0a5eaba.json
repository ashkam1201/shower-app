{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinTabIndex, GestureConfig, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n  @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nconst _c0 = [\"sliderWrapper\"];\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** *\n * The thumb gap size for a disabled slider.\n  @type {?} */\n\nconst DISABLED_THUMB_GAP = 7;\n/** *\n * The thumb gap size for a non-active slider at its minimum value.\n  @type {?} */\n\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** *\n * The thumb gap size for an active slider at its minimum value.\n  @type {?} */\n\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/** *\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n  @type {?} */\n\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\n\nclass MatSliderChange {}\n/**\n * \\@docs-private\n */\n\n\nclass MatSliderBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}\n/** @type {?} */\n\n\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nclass MatSlider extends _MatSliderMixinBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   * @param {?} _dir\n   * @param {?} tabIndex\n   * @param {?=} _animationMode\n   */\n  constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n  _animationMode) {\n    super(elementRef);\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._animationMode = _animationMode;\n    this._invert = false;\n    this._max = 100;\n    this._min = 0;\n    this._step = 1;\n    this._thumbLabel = false;\n    this._tickInterval = 0;\n    this._value = null;\n    this._vertical = false;\n    /**\n     * Event emitted when the slider value has changed.\n     */\n\n    this.change = new EventEmitter();\n    /**\n     * Event emitted when the slider thumb moves.\n     */\n\n    this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     */\n\n    this.onTouched = () => {};\n\n    this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n\n    this._isSliding = false;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n\n    this._isActive = false;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     */\n\n    this._tickIntervalPercent = 0;\n    /**\n     * The dimensions of the slider.\n     */\n\n    this._sliderDimensions = null;\n\n    this._controlValueAccessorChangeFn = () => {};\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     */\n\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n  /**\n   * Whether the slider is inverted.\n   * @return {?}\n   */\n\n\n  get invert() {\n    return this._invert;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set invert(value) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  /**\n   * The maximum value that the slider can have.\n   * @return {?}\n   */\n\n\n  get max() {\n    return this._max;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n\n\n  set max(v) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * The minimum value that the slider can have.\n   * @return {?}\n   */\n\n\n  get min() {\n    return this._min;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n\n\n  set min(v) {\n    this._min = coerceNumberProperty(v, this._min); // If the value wasn't explicitly set by the user, set it to the min.\n\n    if (this._value === null) {\n      this.value = this._min;\n    }\n\n    this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * The values at which the thumb will snap.\n   * @return {?}\n   */\n\n\n  get step() {\n    return this._step;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n\n\n  set step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal =\n      /** @type {?} */\n      this._step.toString().split('.').pop().length;\n    } // Since this could modify the label, we need to notify the change detection.\n\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Whether or not to show the thumb label.\n   * @return {?}\n   */\n\n\n  get thumbLabel() {\n    return this._thumbLabel;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set thumbLabel(value) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   * @return {?}\n   */\n\n\n  get tickInterval() {\n    return this._tickInterval;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value,\n      /** @type {?} */\n      this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  /**\n   * Value of the slider.\n   * @return {?}\n   */\n\n\n  get value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n\n    return this._value;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n\n\n  set value(v) {\n    if (v !== this._value) {\n      /** @type {?} */\n      let value = coerceNumberProperty(v); // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n\n      if (this._roundToDecimal) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Whether the slider is vertical.\n   * @return {?}\n   */\n\n\n  get vertical() {\n    return this._vertical;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /**\n   * The value to be used for display purposes.\n   * @return {?}\n   */\n\n\n  get displayValue() {\n    if (this.displayWith) {\n      return this.displayWith(this.value);\n    } // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n\n\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n  /**\n   * set focus to the host element\n   * @return {?}\n   */\n\n\n  focus() {\n    this._focusHostElement();\n  }\n  /**\n   * blur the host element\n   * @return {?}\n   */\n\n\n  blur() {\n    this._blurHostElement();\n  }\n  /**\n   * The percentage of the slider that coincides with the value.\n   * @return {?}\n   */\n\n\n  get percent() {\n    return this._clamp(this._percent);\n  }\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   * @return {?}\n   */\n\n\n  get _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n  /**\n   * Whether the slider is at its minimum value.\n   * @return {?}\n   */\n\n\n  get _isMinValue() {\n    return this.percent === 0;\n  }\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   * @return {?}\n   */\n\n\n  get _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n\n    return 0;\n  }\n  /**\n   * CSS styles for the track background element.\n   * @return {?}\n   */\n\n\n  get _trackBackgroundStyles() {\n    /** @type {?} */\n    const axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    /** @type {?} */\n\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n  /**\n   * CSS styles for the track fill element.\n   * @return {?}\n   */\n\n\n  get _trackFillStyles() {\n    /** @type {?} */\n    const axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n\n    const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\n    /** @type {?} */\n\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n  /**\n   * CSS styles for the ticks container element.\n   * @return {?}\n   */\n\n\n  get _ticksContainerStyles() {\n    /** @type {?} */\n    let axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    /** @type {?} */\n\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n  /**\n   * CSS styles for the ticks element.\n   * @return {?}\n   */\n\n\n  get _ticksStyles() {\n    /** @type {?} */\n    let tickSize = this._tickIntervalPercent * 100;\n    /** @type {?} */\n\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    /** @type {?} */\n\n    let axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    /** @type {?} */\n\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    /** @type {?} */\n\n    let styles = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      /** @type {?} */\n      let side = this.vertical ? this._invertAxis ? 'Bottom' : 'Top' : this._invertAxis ? 'Right' : 'Left';\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get _thumbContainerStyles() {\n    /** @type {?} */\n    let axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n\n    let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !this._invertAxis : this._invertAxis;\n    /** @type {?} */\n\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   * @return {?}\n   */\n\n\n  _shouldInvertMouseCoords() {\n    return this._getDirection() == 'rtl' && !this.vertical ? !this._invertAxis : this._invertAxis;\n  }\n  /**\n   * The language direction for this slider element.\n   * @return {?}\n   */\n\n\n  _getDirection() {\n    return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      this._isActive = !!origin && origin !== 'keyboard';\n\n      this._changeDetectorRef.detectChanges();\n    });\n\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n\n    this._dirChangeSubscription.unsubscribe();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    } // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n\n\n    this._sliderDimensions = this._getSliderDimensions();\n\n    this._updateTickIntervalPercent();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onClick(event) {\n    if (this.disabled) {\n      return;\n    }\n    /** @type {?} */\n\n\n    let oldValue = this.value;\n    this._isSliding = false;\n\n    this._focusHostElement();\n\n    this._updateValueFromPosition({\n      x: event.clientX,\n      y: event.clientY\n    }); // Emit a change and input event if the value changed.\n\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n\n      this._emitChangeEvent();\n    }\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onSlide(event) {\n    if (this.disabled) {\n      return;\n    } // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n    // state, call the slide start handler manually.\n\n\n    if (!this._isSliding) {\n      this._onSlideStart(null);\n    } // Prevent the slide from selecting anything else.\n\n\n    event.preventDefault();\n    /** @type {?} */\n\n    let oldValue = this.value;\n\n    this._updateValueFromPosition({\n      x: event.center.x,\n      y: event.center.y\n    }); // Native range elements always emit `input` events when the value changed while sliding.\n\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n    }\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onSlideStart(event) {\n    if (this.disabled || this._isSliding) {\n      return;\n    } // Simulate mouseenter in case this is a mobile device.\n\n\n    this._onMouseenter();\n\n    this._isSliding = true;\n\n    this._focusHostElement();\n\n    this._valueOnSlideStart = this.value;\n\n    if (event) {\n      this._updateValueFromPosition({\n        x: event.center.x,\n        y: event.center.y\n      });\n\n      event.preventDefault();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onSlideEnd() {\n    this._isSliding = false;\n\n    if (this._valueOnSlideStart != this.value && !this.disabled) {\n      this._emitChangeEvent();\n    }\n\n    this._valueOnSlideStart = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n\n    this._updateTickIntervalPercent();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onBlur() {\n    this.onTouched();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onKeydown(event) {\n    if (this.disabled) {\n      return;\n    }\n    /** @type {?} */\n\n\n    let oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n\n        break;\n\n      case PAGE_DOWN:\n        this._increment(-10);\n\n        break;\n\n      case END:\n        this.value = this.max;\n        break;\n\n      case HOME:\n        this.value = this.min;\n        break;\n\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n\n        break;\n\n      case UP_ARROW:\n        this._increment(1);\n\n        break;\n\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n\n        break;\n\n      case DOWN_ARROW:\n        this._increment(-1);\n\n        break;\n\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onKeyup() {\n    this._isSliding = false;\n  }\n  /**\n   * Increments the slider by the given number of steps (negative number decrements).\n   * @param {?} numSteps\n   * @return {?}\n   */\n\n\n  _increment(numSteps) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n  /**\n   * Calculate the new value from the new physical location. The value will always be snapped.\n   * @param {?} pos\n   * @return {?}\n   */\n\n\n  _updateValueFromPosition(pos) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n    /** @type {?} */\n\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    /** @type {?} */\n\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    /** @type {?} */\n\n    let posComponent = this.vertical ? pos.y : pos.x;\n    /** @type {?} */\n\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    } // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n\n\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      /** @type {?} */\n      const exactValue = this._calculateValue(percent);\n      /** @type {?} */\n\n\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min; // The value needs to snap to the min and max.\n\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n  /**\n   * Emits a change event if the current value is different from the last emitted value.\n   * @return {?}\n   */\n\n\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n  /**\n   * Emits an input event when the current value is different from the last emitted value.\n   * @return {?}\n   */\n\n\n  _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n  /**\n   * Updates the amount of space between ticks as a percentage of the width of the slider.\n   * @return {?}\n   */\n\n\n  _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      /** @type {?} */\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      /** @type {?} */\n\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      /** @type {?} */\n\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      /** @type {?} */\n\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n  /**\n   * Creates a slider change object from the specified value.\n   * @param {?=} value\n   * @return {?}\n   */\n\n\n  _createChangeEvent(value = this.value) {\n    /** @type {?} */\n    let event = new MatSliderChange();\n    event.source = this;\n    event.value = value;\n    return event;\n  }\n  /**\n   * Calculates the percentage of the slider that a value is.\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _calculatePercentage(value) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n  /**\n   * Calculates the value a percentage of the slider corresponds to.\n   * @param {?} percentage\n   * @return {?}\n   */\n\n\n  _calculateValue(percentage) {\n    return this.min + percentage * (this.max - this.min);\n  }\n  /**\n   * Return a number between two numbers.\n   * @param {?} value\n   * @param {?=} min\n   * @param {?=} max\n   * @return {?}\n   */\n\n\n  _clamp(value, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   * @return {?}\n   */\n\n\n  _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   * @return {?}\n   */\n\n\n  _focusHostElement() {\n    this._elementRef.nativeElement.focus();\n  }\n  /**\n   * Blurs the native element.\n   * @return {?}\n   */\n\n\n  _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn Callback to be registered.\n   * @return {?}\n   */\n\n\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn Callback to be registered.\n   * @return {?}\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} isDisabled\n   * @return {?}\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n}\n\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatSlider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"],\n  hostVars: 26,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"click\", function MatSlider_click_HostBindingHandler($event) {\n        return ctx._onClick($event);\n      })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"slide\", function MatSlider_slide_HostBindingHandler($event) {\n        return ctx._onSlide($event);\n      })(\"slideend\", function MatSlider_slideend_HostBindingHandler() {\n        return ctx._onSlideEnd();\n      })(\"slidestart\", function MatSlider_slidestart_HostBindingHandler($event) {\n        return ctx._onSlideStart($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    value: \"value\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    vertical: \"vertical\",\n    displayWith: \"displayWith\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n      ɵngcc0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelement(6, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n      ɵngcc0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n      ɵngcc0.ɵɵtext(12);\n      ɵngcc0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  dependencies: [ɵngcc3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatSlider.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatSlider.propDecorators = {\n  invert: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  thumbLabel: [{\n    type: Input\n  }],\n  tickInterval: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  displayWith: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  input: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  _sliderWrapper: [{\n    type: ViewChild,\n    args: ['sliderWrapper']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(click)': '_onClick($event)',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        '(slide)': '_onSlide($event)',\n        '(slideend)': '_onSlideEnd()',\n        '(slidestart)': '_onSlideStart($event)',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper><div class=\\\"mat-slider-track-wrapper\\\"><div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div><div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div></div><div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"><div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div></div><div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"><div class=\\\"mat-slider-focus-ring\\\"></div><div class=\\\"mat-slider-thumb\\\"></div><div class=\\\"mat-slider-thumb-label\\\"><span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span></div></div></div>\",\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nclass MatSliderModule {}\n\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\n\nMatSliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: HAMMER_GESTURE_CONFIG,\n    useClass: GestureConfig\n  }],\n  imports: [CommonModule, MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatSlider, MatCommonModule],\n      declarations: [MatSlider],\n      providers: [{\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: GestureConfig\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, {\n    declarations: function () {\n      return [MatSlider];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function () {\n      return [MatSlider, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider };","map":{"version":3,"names":["FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","DOWN_ARROW","END","HOME","LEFT_ARROW","PAGE_DOWN","PAGE_UP","RIGHT_ARROW","UP_ARROW","Attribute","ChangeDetectionStrategy","ChangeDetectorRef","Component","ElementRef","EventEmitter","forwardRef","Inject","Input","Optional","Output","ViewChild","ViewEncapsulation","NgModule","NG_VALUE_ACCESSOR","mixinColor","mixinDisabled","mixinTabIndex","GestureConfig","MatCommonModule","ANIMATION_MODULE_TYPE","Subscription","CommonModule","HAMMER_GESTURE_CONFIG","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","MatSliderBase","constructor","_elementRef","_MatSliderMixinBase","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","parseInt","invert","value","max","v","_calculatePercentage","markForCheck","min","step","_roundToDecimal","toString","split","pop","length","thumbLabel","tickInterval","parseFloat","toFixed","vertical","displayValue","displayWith","focus","_focusHostElement","blur","_blurHostElement","percent","_clamp","_invertAxis","_isMinValue","_thumbGap","disabled","_trackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","transform","_trackFillStyles","_ticksContainerStyles","_getDirection","offset","_ticksStyles","tickSize","backgroundSize","rotate","styles","side","_thumbContainerStyles","invertOffset","ngOnInit","monitor","subscribe","origin","detectChanges","ngOnDestroy","stopMonitoring","unsubscribe","_onMouseenter","_getSliderDimensions","_updateTickIntervalPercent","_onClick","event","oldValue","_updateValueFromPosition","x","clientX","y","clientY","_emitInputEvent","_emitChangeEvent","_onSlide","_onSlideStart","preventDefault","center","_valueOnSlideStart","_onSlideEnd","_onFocus","_onBlur","_onKeydown","keyCode","_increment","_onKeyup","numSteps","pos","top","left","size","height","width","posComponent","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","nativeElement","getBoundingClientRect","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ɵfac","MatSlider_Factory","t","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlider_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","ɵɵlistener","MatSlider_focus_HostBindingHandler","MatSlider_blur_HostBindingHandler","MatSlider_click_HostBindingHandler","$event","MatSlider_keydown_HostBindingHandler","MatSlider_keyup_HostBindingHandler","MatSlider_mouseenter_HostBindingHandler","MatSlider_slide_HostBindingHandler","MatSlider_slideend_HostBindingHandler","MatSlider_slidestart_HostBindingHandler","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatSlider_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","dependencies","NgStyle","encapsulation","changeDetection","ctorParameters","decorators","String","args","propDecorators","ngDevMode","ɵsetClassMetadata","selector","providers","host","None","OnPush","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useClass","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/slider.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinTabIndex, GestureConfig, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** *\n * The thumb gap size for a disabled slider.\n  @type {?} */\nconst DISABLED_THUMB_GAP = 7;\n/** *\n * The thumb gap size for a non-active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** *\n * The thumb gap size for an active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/** *\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n  @type {?} */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, \n    // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n    _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = /** @type {?} */ ((this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @return {?}\n     */\n    focus() {\n        this._focusHostElement();\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side = this.vertical ?\n                (this._invertAxis ? 'Bottom' : 'Top') :\n                (this._invertAxis ? 'Right' : 'Left');\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onClick(event) {\n        if (this.disabled) {\n            return;\n        }\n        /** @type {?} */\n        let oldValue = this.value;\n        this._isSliding = false;\n        this._focusHostElement();\n        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });\n        // Emit a change and input event if the value changed.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSlide(event) {\n        if (this.disabled) {\n            return;\n        }\n        // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n        // state, call the slide start handler manually.\n        if (!this._isSliding) {\n            this._onSlideStart(null);\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        /** @type {?} */\n        let oldValue = this.value;\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n        // Native range elements always emit `input` events when the value changed while sliding.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSlideStart(event) {\n        if (this.disabled || this._isSliding) {\n            return;\n        }\n        // Simulate mouseenter in case this is a mobile device.\n        this._onMouseenter();\n        this._isSliding = true;\n        this._focusHostElement();\n        this._valueOnSlideStart = this.value;\n        if (event) {\n            this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n            event.preventDefault();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onSlideEnd() {\n        this._isSliding = false;\n        if (this._valueOnSlideStart != this.value && !this.disabled) {\n            this._emitChangeEvent();\n        }\n        this._valueOnSlideStart = null;\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        /** @type {?} */\n        let oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    _focusHostElement() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Blurs the native element.\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"], hostVars: 26, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"click\", function MatSlider_click_HostBindingHandler($event) { return ctx._onClick($event); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"slide\", function MatSlider_slide_HostBindingHandler($event) { return ctx._onSlide($event); })(\"slideend\", function MatSlider_slideend_HostBindingHandler() { return ctx._onSlideEnd(); })(\"slidestart\", function MatSlider_slidestart_HostBindingHandler($event) { return ctx._onSlideStart($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, dependencies: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_SLIDER_VALUE_ACCESSOR], host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(click)': '_onClick($event)',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    '(slide)': '_onSlide($event)',\n                    '(slideend)': '_onSlideEnd()',\n                    '(slidestart)': '_onSlideStart($event)',\n                    'class': 'mat-slider',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper><div class=\\\"mat-slider-track-wrapper\\\"><div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div><div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div></div><div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"><div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div></div><div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"><div class=\\\"mat-slider-focus-ring\\\"></div><div class=\\\"mat-slider-thumb\\\"></div><div class=\\\"mat-slider-thumb-label\\\"><span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span></div></div></div>\", inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }], imports: [CommonModule, MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider],\n                providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}