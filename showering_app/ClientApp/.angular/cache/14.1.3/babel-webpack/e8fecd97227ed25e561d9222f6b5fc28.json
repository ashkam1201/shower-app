{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nclass MatDivider {\n  constructor() {\n    this._vertical = false;\n    this._inset = false;\n  }\n  /**\n   * Whether the divider is vertically aligned.\n   * @return {?}\n   */\n\n\n  get vertical() {\n    return this._vertical;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the divider is an inset divider.\n   * @return {?}\n   */\n\n\n  get inset() {\n    return this._inset;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set inset(value) {\n    this._inset = coerceBooleanProperty(value);\n  }\n\n}\n\nMatDivider.ɵfac = function MatDivider_Factory(t) {\n  return new (t || MatDivider)();\n};\n\nMatDivider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDivider,\n  selectors: [[\"mat-divider\"]],\n  hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"],\n  hostVars: 7,\n  hostBindings: function MatDivider_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    }\n  },\n  inputs: {\n    vertical: \"vertical\",\n    inset: \"inset\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatDivider_Template(rf, ctx) {},\n  styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatDivider.propDecorators = {\n  vertical: [{\n    type: Input\n  }],\n  inset: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-divider',\n      host: {\n        'role': 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-divider-vertical]': 'vertical',\n        '[class.mat-divider-horizontal]': '!vertical',\n        '[class.mat-divider-inset]': 'inset',\n        'class': 'mat-divider'\n      },\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    vertical: [{\n      type: Input\n    }],\n    inset: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nclass MatDividerModule {}\n\nMatDividerModule.ɵfac = function MatDividerModule_Factory(t) {\n  return new (t || MatDividerModule)();\n};\n\nMatDividerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatDividerModule\n});\nMatDividerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, CommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule],\n      exports: [MatDivider, MatCommonModule],\n      declarations: [MatDivider]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, {\n    declarations: function () {\n      return [MatDivider];\n    },\n    imports: function () {\n      return [MatCommonModule, CommonModule];\n    },\n    exports: function () {\n      return [MatDivider, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatDivider, MatDividerModule };","map":{"version":3,"names":["ChangeDetectionStrategy","Component","Input","ViewEncapsulation","NgModule","coerceBooleanProperty","CommonModule","MatCommonModule","ɵngcc0","MatDivider","constructor","_vertical","_inset","vertical","value","inset","ɵfac","MatDivider_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDivider_HostBindings","rf","ctx","ɵɵattribute","ɵɵclassProp","inputs","decls","vars","template","MatDivider_Template","styles","encapsulation","changeDetection","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","MatDividerModule","MatDividerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/divider.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{ selector: 'mat-divider', host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); };\nMatDividerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, CommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatDivider, MatDividerModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}