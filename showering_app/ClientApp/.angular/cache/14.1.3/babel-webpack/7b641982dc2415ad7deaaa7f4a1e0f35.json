{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, ContentChild, ContentChildren, EventEmitter, Input, NgZone, Output, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\n\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4._isAnimating = true);\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n  }\n}\n\nclass MatMenuContent {\n  /**\n   * @param {?} _template\n   * @param {?} _componentFactoryResolver\n   * @param {?} _appRef\n   * @param {?} _injector\n   * @param {?} _viewContainerRef\n   * @param {?} _document\n   */\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    /**\n     * Emits when the menu content has been attached.\n     */\n\n    this._attached = new Subject();\n  }\n  /**\n   * Attaches the content with a particular context.\n   * \\@docs-private\n   * @param {?=} context\n   * @return {?}\n   */\n\n\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n    /** @type {?} */\n\n\n    const element = this._template.elementRef.nativeElement;\n    /** @type {?} */\n\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode.insertBefore(this._outlet.outletElement, element);\n\n    this._portal.attach(this._outlet, context);\n\n    this._attached.next();\n  }\n  /**\n   * Detaches the content.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n\n}\n\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) {\n  return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatMenuContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuContent,\n  selectors: [[\"ng-template\", \"matMenuContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatMenuContent.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ApplicationRef\n}, {\n  type: Injector\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n  @type {?} */\n\n\nconst matMenuAnimations = {\n  /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', group([query('.mat-menu-content', animate('100ms linear', style({\n    opacity: 1\n  }))), animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    transform: 'scale(1)'\n  }))])), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n\n  /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n  fadeInItems: trigger('fadeInItems', [// TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\n\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\n\nconst transformMenu = matMenuAnimations.transformMenu;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\n\nfunction throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n  @type {?} */\n\n\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\nclass MatMenuItemBase {}\n/** @type {?} */\n\n\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\n\n\nclass MatMenuItem extends _MatMenuItemMixinBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?=} document\n   * @param {?=} _focusMonitor\n   * @param {?=} _parentMenu\n   */\n  constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    /**\n     * Stream that emits when the menu item is hovered.\n     */\n\n    this._hovered = new Subject();\n    /**\n     * Whether the menu item is highlighted.\n     */\n\n    this._highlighted = false;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     */\n\n    this._triggersSubmenu = false;\n\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._elementRef, false);\n    }\n\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n\n    this._document = document;\n  }\n  /**\n   * Focuses the menu item.\n   * @param {?=} origin\n   * @return {?}\n   */\n\n\n  focus(origin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\n    } else {\n      this._getHostElement().focus();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n\n    this._hovered.complete();\n  }\n  /**\n   * Used to set the `tabindex`.\n   * @return {?}\n   */\n\n\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /**\n   * Returns the host DOM element.\n   * @return {?}\n   */\n\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /**\n   * Prevents the default element actions if it is disabled.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /**\n   * Emits to the hover stream.\n   * @return {?}\n   */\n\n\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n  /**\n   * Gets the label to be used when determining whether the option should be focused.\n   * @return {?}\n   */\n\n\n  getLabel() {\n    /** @type {?} */\n    const element = this._elementRef.nativeElement;\n    /** @type {?} */\n\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    /** @type {?} */\n\n    let output = '';\n\n    if (element.childNodes) {\n      /** @type {?} */\n      const length = element.childNodes.length; // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n}\n\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) {\n  return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8));\n};\n\nMatMenuItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenuItem,\n  selectors: [[\"\", \"mat-menu-item\", \"\"]],\n  hostAttrs: [\"role\", \"menuitem\", 1, \"mat-menu-item\"],\n  hostVars: 7,\n  hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n        return ctx._checkDisabled($event);\n      })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n        return ctx._handleMouseEnter();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matMenuItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 2,\n  consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]],\n  template: function MatMenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelement(1, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    }\n  },\n  dependencies: [ɵngcc2.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatMenuItem.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_PANEL]\n  }, {\n    type: Optional\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        'role': 'menuitem',\n        'class': 'mat-menu-item',\n        '[class.mat-menu-item-highlighted]': '_highlighted',\n        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Injection token to be used to override the default options for `mat-menu`.\n  @type {?} */\n\n\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n/** *\n * Start elevation for the menu panel.\n * \\@docs-private\n  @type {?} */\n\n\nconst MAT_MENU_BASE_ELEVATION = 4;\n\nclass MatMenu {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?} _defaultOptions\n   */\n  constructor(_elementRef, _ngZone, _defaultOptions) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._defaultOptions = _defaultOptions;\n    this._xPosition = this._defaultOptions.xPosition;\n    this._yPosition = this._defaultOptions.yPosition;\n    /**\n     * Menu items inside the current menu.\n     */\n\n    this._items = [];\n    /**\n     * Emits whenever the amount of menu items changes.\n     */\n\n    this._itemChanges = new Subject();\n    /**\n     * Subscription to tab events on the menu panel\n     */\n\n    this._tabSubscription = Subscription.EMPTY;\n    /**\n     * Config object to be passed into the menu's ngClass\n     */\n\n    this._classList = {};\n    /**\n     * Current state of the panel animation.\n     */\n\n    this._panelAnimationState = 'void';\n    /**\n     * Emits whenever an animation on the menu completes.\n     */\n\n    this._animationDone = new Subject();\n    /**\n     * Class to be added to the backdrop element.\n     */\n\n    this.backdropClass = this._defaultOptions.backdropClass;\n    this._overlapTrigger = this._defaultOptions.overlapTrigger;\n    this._hasBackdrop = this._defaultOptions.hasBackdrop;\n    /**\n     * Event emitted when the menu is closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     */\n\n    this.close = this.closed;\n  }\n  /**\n   * Position of the menu in the X axis.\n   * @return {?}\n   */\n\n\n  get xPosition() {\n    return this._xPosition;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * Position of the menu in the Y axis.\n   * @return {?}\n   */\n\n\n  get yPosition() {\n    return this._yPosition;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * Whether the menu should overlap its trigger.\n   * @return {?}\n   */\n\n\n  get overlapTrigger() {\n    return this._overlapTrigger;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set overlapTrigger(value) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the menu has a backdrop.\n   * @return {?}\n   */\n\n\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set hasBackdrop(value) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param {?} classes list of class names\n   * @return {?}\n   */\n\n\n  set panelClass(classes) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj, className) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * \\@breaking-change 8.0.0\n   * @return {?}\n   */\n\n\n  get classList() {\n    return this.panelClass;\n  }\n  /**\n   * @param {?} classes\n   * @return {?}\n   */\n\n\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._items).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n\n    this.closed.complete();\n  }\n  /**\n   * Stream that emits whenever the hovered menu item changes.\n   * @return {?}\n   */\n\n\n  _hovered() {\n    return this._itemChanges.pipe(startWith(this._items), switchMap(items => merge(...items.map(item => item._hovered))));\n  }\n  /**\n   * Handle a keyboard event from the menu, delegating to the appropriate action.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleKeydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n\n    switch (keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n        event.stopPropagation();\n        break;\n\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          this._keyManager.setFocusOrigin('keyboard');\n        }\n\n        this._keyManager.onKeydown(event);\n\n    }\n  }\n  /**\n   * Focus the first item in the menu.\n   * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n   * @return {?}\n   */\n\n\n  focusFirstItem(origin = 'program') {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n    } else {\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n    }\n  }\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   * @return {?}\n   */\n\n\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n  /**\n   * Sets the menu panel elevation.\n   * @param {?} depth Number of parent menus that come before the menu.\n   * @return {?}\n   */\n\n\n  setElevation(depth) {\n    /** @type {?} */\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    /** @type {?} */\n\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n  /**\n   * Registers a menu item with the menu.\n   * \\@docs-private\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  addItem(item) {\n    // We register the items through this method, rather than picking them up through\n    // `ContentChildren`, because we need the items to be picked up by their closest\n    // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n    // all descendant items will bleed into the top-level menu in the case where the consumer\n    // has `mat-menu` instances nested inside each other.\n    if (this._items.indexOf(item) === -1) {\n      this._items.push(item);\n\n      this._itemChanges.next(this._items);\n    }\n  }\n  /**\n   * Removes an item from the menu.\n   * \\@docs-private\n   * @param {?} item\n   * @return {?}\n   */\n\n\n  removeItem(item) {\n    /** @type {?} */\n    const index = this._items.indexOf(item);\n\n    if (this._items.indexOf(item) > -1) {\n      this._items.splice(index, 1);\n\n      this._itemChanges.next(this._items);\n    }\n  }\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * \\@docs-private\n   * @param {?=} posX Position of the menu along the x axis.\n   * @param {?=} posY Position of the menu along the y axis.\n   * @return {?}\n   */\n\n\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    /** @type {?} */\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n  /**\n   * Starts the enter animation.\n   * @return {?}\n   */\n\n\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n  /**\n   * Resets the panel animation to its initial state.\n   * @return {?}\n   */\n\n\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n  /**\n   * Callback that is invoked when the panel animation completes.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n\n    this._isAnimating = false; // Scroll the content element to the top once the animation is done. This is necessary, because\n    // we move focus to the first item while it's still being animated, which can throw the browser\n    // off when it determines the scroll position. Alternatively we can move focus when the\n    // animation is done, however moving focus asynchronously will interrupt screen readers\n    // which are in the process of reading out the menu already. We take the `element` from\n    // the `event` since we can't use a `ViewChild` to access the pane.\n\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n\n}\n\nMatMenu.ɵfac = function MatMenu_Factory(t) {\n  return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n\nMatMenu.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenu,\n  selectors: [[\"mat-menu\"]],\n  contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  viewQuery: function MatMenu_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\",\n    xPosition: \"xPosition\",\n    yPosition: \"yPosition\",\n    overlapTrigger: \"overlapTrigger\",\n    hasBackdrop: \"hasBackdrop\",\n    panelClass: [\"class\", \"panelClass\"],\n    classList: \"classList\"\n  },\n  outputs: {\n    closed: \"closed\",\n    close: \"close\"\n  },\n  exportAs: [\"matMenu\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_PANEL,\n    useExisting: MatMenu\n  }])],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]],\n  template: function MatMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    }\n  },\n  dependencies: [ɵngcc3.NgClass],\n  styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatMenu.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_DEFAULT_OPTIONS]\n  }]\n}];\n\nMatMenu.propDecorators = {\n  backdropClass: [{\n    type: Input\n  }],\n  xPosition: [{\n    type: Input\n  }],\n  yPosition: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [MatMenuItem]\n  }],\n  lazyContent: [{\n    type: ContentChild,\n    args: [MatMenuContent]\n  }],\n  overlapTrigger: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  panelClass: [{\n    type: Input,\n    args: ['class']\n  }],\n  classList: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_isAnimating = true\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, {\n    backdropClass: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    overlapTrigger: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MatMenuContent]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Injection token that determines the scroll handling while the menu is open.\n  @type {?} */\n\n\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\n\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** *\n * \\@docs-private\n  @type {?} */\n\n\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** *\n * Default top padding of the menu panel.\n  @type {?} */\n\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\n\nclass MatMenuTrigger {\n  /**\n   * @param {?} _overlay\n   * @param {?} _element\n   * @param {?} _viewContainerRef\n   * @param {?} scrollStrategy\n   * @param {?} _parentMenu\n   * @param {?} _menuItemInstance\n   * @param {?} _dir\n   * @param {?=} _focusMonitor\n   */\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._parentMenu = _parentMenu;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closeSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._openedByMouse = false;\n    /**\n     * Event emitted when the associated menu is opened.\n     */\n\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     */\n\n    this.onMenuOpen = this.menuOpened;\n    /**\n     * Event emitted when the associated menu is closed.\n     */\n\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     */\n\n    this.onMenuClose = this.menuClosed;\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n  /**\n   * @deprecated\n   * \\@breaking-change 8.0.0\n   * @return {?}\n   */\n\n\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n\n\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._checkMenu();\n\n    this.menu.close.asObservable().subscribe(reason => {\n      this._destroyMenu(); // If a click closed the menu, we should close the entire chain of nested menus.\n\n\n      if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n        this._parentMenu.closed.emit(reason);\n      }\n    });\n\n    this._handleHover();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n  /**\n   * Whether the menu is open.\n   * @return {?}\n   */\n\n\n  get menuOpen() {\n    return this._menuOpen;\n  }\n  /**\n   * The text direction of the containing app.\n   * @return {?}\n   */\n\n\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Whether the menu triggers a sub-menu or a top-level one.\n   * @return {?}\n   */\n\n\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n  /**\n   * Toggles the menu between the open and closed states.\n   * @return {?}\n   */\n\n\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n  /**\n   * Opens the menu.\n   * @return {?}\n   */\n\n\n  openMenu() {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n    /** @type {?} */\n\n\n    const overlayRef = this._createOverlay();\n\n    this._setPosition(\n    /** @type {?} */\n    overlayRef.getConfig().positionStrategy);\n\n    overlayRef.attach(this._portal);\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n\n    this._initMenu();\n\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n  /**\n   * Closes the menu.\n   * @return {?}\n   */\n\n\n  closeMenu() {\n    this.menu.close.emit();\n  }\n  /**\n   * Focuses the menu trigger.\n   * @param {?=} origin Source of the menu trigger's focus.\n   * @return {?}\n   */\n\n\n  focus(origin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element, origin);\n    } else {\n      this._element.nativeElement.focus();\n    }\n  }\n  /**\n   * Closes the menu and does the necessary cleanup.\n   * @return {?}\n   */\n\n\n  _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n    /** @type {?} */\n\n\n    const menu = this.menu;\n\n    this._closeSubscription.unsubscribe();\n\n    this._overlayRef.detach();\n\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone.pipe(filter(event => event.toState === 'void'), take(1), // Interrupt if the content got re-attached.\n        takeUntil(menu.lazyContent._attached)).subscribe(() =>\n        /** @type {?} */\n        menu.lazyContent.detach(), undefined, () => {\n          // No matter whether the content got re-attached, reset the menu.\n          this._resetMenu();\n        });\n      } else {\n        this._resetMenu();\n      }\n    } else {\n      this._resetMenu();\n\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   * @return {?}\n   */\n\n\n  _initMenu() {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n\n    this._setMenuElevation();\n\n    this._setIsMenuOpen(true);\n\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\n  }\n  /**\n   * Updates the menu elevation based on the amount of parent menus that it has.\n   * @return {?}\n   */\n\n\n  _setMenuElevation() {\n    if (this.menu.setElevation) {\n      /** @type {?} */\n      let depth = 0;\n      /** @type {?} */\n\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n  /**\n   * This method resets the menu when it's closed, most importantly restoring\n   * focus to the menu trigger if the menu was opened via the keyboard.\n   * @return {?}\n   */\n\n\n  _resetMenu() {\n    this._setIsMenuOpen(false); // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n\n\n    if (!this._openedByMouse) {\n      // Note that the focus style will show up both for `program` and\n      // `keyboard` so we don't have to specify which one it is.\n      this.focus();\n    } else if (!this.triggersSubmenu()) {\n      this.focus('mouse');\n    }\n\n    this._openedByMouse = false;\n  }\n  /**\n   * @param {?} isOpen\n   * @return {?}\n   */\n\n\n  _setIsMenuOpen(isOpen) {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   * @return {?}\n   */\n\n\n  _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   * @return {?}\n   */\n\n\n  _createOverlay() {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      /** @type {?} */\n\n      const config = this._getOverlayConfig();\n\n      this._subscribeToPositions(\n      /** @type {?} */\n      config.positionStrategy);\n\n      this._overlayRef = this._overlay.create(config);\n    }\n\n    return this._overlayRef;\n  }\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @return {?} OverlayConfig\n   */\n\n\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withTransformOriginOn('.mat-menu-panel'),\n      hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   * @param {?} position\n   * @return {?}\n   */\n\n\n  _subscribeToPositions(position) {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        /** @type {?} */\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        /** @type {?} */\n\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n        /** @type {?} */\n\n        this.menu.setPositionClasses(posX, posY);\n      });\n    }\n  }\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param {?} positionStrategy Strategy whose position to update.\n   * @return {?}\n   */\n\n\n  _setPosition(positionStrategy) {\n    let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    /** @type {?} */\n\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n  /**\n   * Cleans up the active subscriptions.\n   * @return {?}\n   */\n\n\n  _cleanUpSubscriptions() {\n    this._closeSubscription.unsubscribe();\n\n    this._hoverSubscription.unsubscribe();\n  }\n  /**\n   * Returns a stream that emits whenever an action that should close the menu occurs.\n   * @return {?}\n   */\n\n\n  _menuClosingActions() {\n    /** @type {?} */\n    const backdrop =\n    /** @type {?} */\n    this._overlayRef.backdropClick();\n    /** @type {?} */\n\n\n    const detachments =\n    /** @type {?} */\n    this._overlayRef.detachments();\n    /** @type {?} */\n\n\n    const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n    /** @type {?} */\n\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n  /**\n   * Handles mouse presses on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedByMouse = event.button === 0; // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n  /**\n   * Handles key presses on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleKeydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this.openMenu();\n    }\n  }\n  /**\n   * Handles click events on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n  /**\n   * Handles the cases where the user hovers over the trigger.\n   * @return {?}\n   */\n\n\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu()) {\n      return;\n    }\n\n    this._hoverSubscription = this._parentMenu._hovered() // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n    // with different data and triggers), we have to delay it by a tick to ensure that\n    // it won't be closed immediately after it is opened.\n    .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(() => {\n      this._openedByMouse = true; // If the same menu is used between multiple triggers, it might still be animating\n      // while the new trigger tries to re-open it. Wait for the animation to finish\n      // before doing so. Also interrupt if the user moves to another item.\n\n      if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n        // We need the `delay(0)` here in order to avoid\n        // 'changed after checked' errors in some cases. See #12194.\n        this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered())).subscribe(() => this.openMenu());\n      } else {\n        this.openMenu();\n      }\n    });\n  }\n\n}\n\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) {\n  return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n};\n\nMatMenuTrigger.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuTrigger,\n  selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\"],\n  hostVars: 1,\n  hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n        return ctx._handleMousedown($event);\n      })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    }\n  },\n  inputs: {\n    _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n    menu: [\"matMenuTriggerFor\", \"menu\"],\n    menuData: [\"matMenuTriggerData\", \"menuData\"]\n  },\n  outputs: {\n    menuOpened: \"menuOpened\",\n    onMenuOpen: \"onMenuOpen\",\n    menuClosed: \"menuClosed\",\n    onMenuClose: \"onMenuClose\"\n  },\n  exportAs: [\"matMenuTrigger\"]\n});\n/** @nocollapse */\n\nMatMenuTrigger.ctorParameters = () => [{\n  type: Overlay\n}, {\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_SCROLL_STRATEGY]\n  }]\n}, {\n  type: MatMenu,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: MatMenuItem,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: FocusMonitor\n}];\n\nMatMenuTrigger.propDecorators = {\n  _deprecatedMatMenuTriggerFor: [{\n    type: Input,\n    args: ['mat-menu-trigger-for']\n  }],\n  menu: [{\n    type: Input,\n    args: ['matMenuTriggerFor']\n  }],\n  menuData: [{\n    type: Input,\n    args: ['matMenuTriggerData']\n  }],\n  menuOpened: [{\n    type: Output\n  }],\n  onMenuOpen: [{\n    type: Output\n  }],\n  menuClosed: [{\n    type: Output\n  }],\n  onMenuClose: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'menuOpen || null',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick($event)'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: MatMenu,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }];\n  }, {\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }],\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nclass MatMenuModule {}\n\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) {\n  return new (t || MatMenuModule)();\n};\n\nMatMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatMenuModule\n});\nMatMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n      exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n      declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, {\n    declarations: function () {\n      return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, MatRippleModule, OverlayModule];\n    },\n    exports: function () {\n      return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MAT_MENU_SCROLL_STRATEGY, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa24, MatMenuItemBase as ɵb24, _MatMenuItemMixinBase as ɵc24, MAT_MENU_PANEL as ɵf24, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵd24, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵe24 };","map":{"version":3,"names":["Directive","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","Inject","InjectionToken","ChangeDetectionStrategy","Component","ElementRef","ViewEncapsulation","Optional","ContentChild","ContentChildren","EventEmitter","Input","NgZone","Output","ViewChild","Self","NgModule","TemplatePortal","DomPortalOutlet","DOCUMENT","CommonModule","Subject","merge","Subscription","asapScheduler","of","trigger","state","style","animate","transition","query","group","FocusMonitor","FocusKeyManager","isFakeMousedownFromScreenReader","mixinDisabled","mixinDisableRipple","MatCommonModule","MatRippleModule","coerceBooleanProperty","ESCAPE","LEFT_ARROW","RIGHT_ARROW","DOWN_ARROW","UP_ARROW","startWith","switchMap","take","delay","filter","takeUntil","Directionality","Overlay","OverlayConfig","OverlayModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","_c1","MatMenu_ng_template_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_handleKeydown","MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_isAnimating","MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ɵɵprojection","ɵɵelementEnd","ctx_r0","ɵɵproperty","_classList","_panelAnimationState","MatMenuContent","constructor","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","attach","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","next","isAttached","ngOnDestroy","dispose","ɵfac","MatMenuContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","selector","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_elementRef","document","_focusMonitor","_parentMenu","_hovered","_highlighted","_triggersSubmenu","monitor","addItem","focus","origin","focusVia","_getHostElement","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","output","childNodes","length","i","nodeType","textContent","trim","MatMenuItem_Factory","ɵcmp","ɵɵdefineComponent","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","ɵɵattribute","toString","ɵɵclassProp","inputs","disableRipple","exportAs","features","ɵɵInheritDefinitionFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵelement","ɵɵadvance","dependencies","MatRipple","encapsulation","changeDetection","host","OnPush","None","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_BASE_ELEVATION","MatMenu","_ngZone","_defaultOptions","_xPosition","_yPosition","_items","_itemChanges","_tabSubscription","EMPTY","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","close","value","setPositionClasses","panelClass","classes","split","reduce","obj","className","classList","ngOnInit","ngAfterContentInit","_keyManager","withWrap","withTypeAhead","tabOut","subscribe","unsubscribe","pipe","items","map","item","keyCode","parentMenu","direction","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","setFirstItemActive","resetActiveItem","setActiveItem","setElevation","depth","newElevation","customElevation","Object","keys","find","c","startsWith","_previousElevation","indexOf","push","index","splice","posX","posY","_startAnimation","_resetAnimation","toState","activeItemIndex","scrollTop","MatMenu_Factory","contentQueries","MatMenu_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatMenu_Query","ɵɵviewQuery","templateRef","outputs","ɵɵProvidersFeature","provide","useExisting","MatMenu_Template","ɵɵtemplate","NgClass","styles","data","animation","propDecorators","animations","providers","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closeSubscription","_hoverSubscription","_openedByMouse","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","_scrollStrategy","_deprecatedMatMenuTriggerFor","menu","v","_checkMenu","reason","_destroyMenu","_handleHover","_cleanUpSubscriptions","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","_setPosition","getConfig","positionStrategy","menuData","_menuClosingActions","_initMenu","_resetMenu","_setMenuElevation","_setIsMenuOpen","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","MatMenuModule","MatMenuModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵa24","ɵb24","ɵc24","ɵf24","ɵd24","ɵe24"],"sources":["/Users/owtgvaolt210/RiderProjects/showering_app/showering_app/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/menu.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, ContentChild, ContentChildren, EventEmitter, Input, NgZone, Output, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event)); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\")); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4._isAnimating = true); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n} }\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement; /** @type {?} */\n        ((\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n  @type {?} */\nconst matMenuAnimations = {\n    /**\n       * This animation controls the menu panel's entry and exit from the page.\n       *\n       * When the menu panel is added to the DOM, it scales in and fades in its border.\n       *\n       * When the menu panel is removed from the DOM, it simply fades out after a brief\n       * delay to display the ripple.\n       */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content', animate('100ms linear', style({ opacity: 1 }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n       * This animation fades in the background color and content of the menu panel\n       * after its containing element is scaled in.\n       */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        }\n        else {\n            this._getHostElement().focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [\"role\", \"menuitem\", 1, \"mat-menu-item\"], hostVars: 7, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, dependencies: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{ selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    'role': 'menuitem',\n                    'class': 'mat-menu-item',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    '(click)': '_checkDisabled($event)',\n                    '(mouseenter)': '_handleMouseEnter()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\" }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token to be used to override the default options for `mat-menu`.\n  @type {?} */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/** *\n * Start elevation for the menu panel.\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_BASE_ELEVATION = 4;\nclass MatMenu {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Menu items inside the current menu.\n         */\n        this._items = [];\n        /**\n         * Emits whenever the amount of menu items changes.\n         */\n        this._itemChanges = new Subject();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj, className) => {\n                obj[className] = true;\n                return obj;\n            }, {});\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this._items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        return this._itemChanges.pipe(startWith(this._items), switchMap(items => merge(...items.map(item => item._hovered))));\n    }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                event.stopPropagation();\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    this._keyManager.setFocusOrigin('keyboard');\n                }\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        }\n        else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Registers a menu item with the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level menu in the case where the consumer\n        // has `mat-menu` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        /** @type {?} */\n        const index = this._items.indexOf(item);\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the menu already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function MatMenu_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu }\n        ])], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, dependencies: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\nMatMenu.propDecorators = {\n    backdropClass: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem,] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{ selector: 'mat-menu', template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_isAnimating = true\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\", changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ], providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu }\n                ], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that determines the scroll handling while the menu is open.\n  @type {?} */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** *\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** *\n * Default top padding of the menu panel.\n  @type {?} */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closeSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._openedByMouse = false;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.onMenuClose = this.menuClosed;\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this.menu.close.asObservable().subscribe(reason => {\n            this._destroyMenu();\n            // If a click closed the menu, we should close the entire chain of nested menus.\n            if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                this._parentMenu.closed.emit(reason);\n            }\n        });\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._cleanUpSubscriptions();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._setPosition(/** @type {?} */ (overlayRef.getConfig().positionStrategy));\n        overlayRef.attach(this._portal);\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin);\n        }\n        else {\n            this._element.nativeElement.focus();\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe(() => /** @type {?} */ ((menu.lazyContent)).detach(), undefined, () => {\n                    // No matter whether the content got re-attached, reset the menu.\n                    this._resetMenu();\n                });\n            }\n            else {\n                this._resetMenu();\n            }\n        }\n        else {\n            this._resetMenu();\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    _resetMenu() {\n        this._setIsMenuOpen(false);\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedByMouse) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        }\n        else if (!this.triggersSubmenu()) {\n            this.focus('mouse');\n        }\n        this._openedByMouse = false;\n    }\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel'),\n            hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above'; /** @type {?} */\n                ((this.menu.setPositionClasses))(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    _cleanUpSubscriptions() {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = /** @type {?} */ ((this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = /** @type {?} */ ((this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedByMouse = event.button === 0;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedByMouse = true;\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\"], hostVars: 1, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    } }, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                ],\n                exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule]; }, exports: function () { return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MAT_MENU_SCROLL_STRATEGY, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa24, MatMenuItemBase as ɵb24, _MatMenuItemMixinBase as ɵc24, MAT_MENU_PANEL as ɵf24, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵd24, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵe24 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}